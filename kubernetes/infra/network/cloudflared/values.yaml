controllers:
  defaultPodOptions:
    securityContext:
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: cloudflared
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
  cloudflared:
    replicas: 2
    strategy: RollingUpdate
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      app:
        image:
          repository: docker.io/cloudflare/cloudflared
          tag: 2024.6.1@sha256:b809ea110a98112b0ed98b7d976e373c70321541f1a8f592e7932dd63cbf6c5a
        env:
          TZ: ${TIMEZONE}
          NO_AUTOUPDATE: "true"
          TUNNEL_CRED_FILE: /etc/cloudflared/creds/credentials.json
          TUNNEL_METRICS: 0.0.0.0:8080
          TUNNEL_MANAGEMENT_DIAGNOSTICS: false
          TUNNEL_TRANSPORT_PROTOCOL: quic
          TUNNEL_POST_QUANTUM: true
          TUNNEL_ID:
            valueFrom:
              secretKeyRef:
                name: cloudflared-credentials
                key: TUNNEL_ID
        args:
          - tunnel
          - --config
          - /etc/cloudflared/config/config.yaml
          - run
          - daa31376-2a34-4393-ae1d-4190b73de357
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /ready
                port: &port 8080
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
        resources:
          requests:
            cpu: 5m
            memory: 10Mi
          limits:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: [ALL] }

  service:
    app:
      controller: cloudflared
      ports:
        http:
          port: *port
  serviceMonitor:
    app:
      serviceName: cloudflared
      endpoints:
        - port: http
          scheme: http
          path: /metrics
          interval: 1m
          scrapeTimeout: 10s
  persistence:
    config:
      type: configMap
      name: cloudflared-configmap
      globalMounts:
        - path: /etc/cloudflared/config/config.yaml
          subPath: config.yaml
          readOnly: true
    creds:
      type: secret
      name: cloudflared-credentials
      globalMounts:
        - path: /etc/cloudflared/creds/credentials.json
          subPath: credentials.json
          readOnly: true
